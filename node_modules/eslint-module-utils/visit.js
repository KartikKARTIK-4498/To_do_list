'use strict';
<<<<<<< HEAD
exports.__esModule = true;

=======

exports.__esModule = true;

/** @type {import('./visit').default} */
>>>>>>> daf1795927da2d71e7fda32ee847e5794b9052d5
exports.default = function visit(node, keys, visitorSpec) {
  if (!node || !keys) {
    return;
  }
  const type = node.type;
<<<<<<< HEAD
  if (typeof visitorSpec[type] === 'function') {
    visitorSpec[type](node);
=======
  const visitor = visitorSpec[type];
  if (typeof visitor === 'function') {
    visitor(node);
>>>>>>> daf1795927da2d71e7fda32ee847e5794b9052d5
  }
  const childFields = keys[type];
  if (!childFields) {
    return;
  }
  childFields.forEach((fieldName) => {
<<<<<<< HEAD
=======
    // @ts-expect-error TS sucks with concat
>>>>>>> daf1795927da2d71e7fda32ee847e5794b9052d5
    [].concat(node[fieldName]).forEach((item) => {
      visit(item, keys, visitorSpec);
    });
  });
<<<<<<< HEAD
  if (typeof visitorSpec[`${type}:Exit`] === 'function') {
    visitorSpec[`${type}:Exit`](node);
=======

  const exit = visitorSpec[`${type}:Exit`];
  if (typeof exit === 'function') {
    exit(node);
>>>>>>> daf1795927da2d71e7fda32ee847e5794b9052d5
  }
};
