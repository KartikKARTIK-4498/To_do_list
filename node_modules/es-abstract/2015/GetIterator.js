'use strict';

<<<<<<< HEAD
var GetIntrinsic = require('get-intrinsic');

var $TypeError = GetIntrinsic('%TypeError%');
=======
var $TypeError = require('es-errors/type');
>>>>>>> daf1795927da2d71e7fda32ee847e5794b9052d5

var getIteratorMethod = require('../helpers/getIteratorMethod');
var AdvanceStringIndex = require('./AdvanceStringIndex');
var Call = require('./Call');
var GetMethod = require('./GetMethod');
var IsArray = require('./IsArray');
var Type = require('./Type');

<<<<<<< HEAD
// https://ecma-international.org/ecma-262/6.0/#sec-getiterator
=======
// https://262.ecma-international.org/6.0/#sec-getiterator
>>>>>>> daf1795927da2d71e7fda32ee847e5794b9052d5

module.exports = function GetIterator(obj, method) {
	var actualMethod = method;
	if (arguments.length < 2) {
		actualMethod = getIteratorMethod(
			{
				AdvanceStringIndex: AdvanceStringIndex,
				GetMethod: GetMethod,
<<<<<<< HEAD
				IsArray: IsArray,
				Type: Type
=======
				IsArray: IsArray
>>>>>>> daf1795927da2d71e7fda32ee847e5794b9052d5
			},
			obj
		);
	}
	var iterator = Call(actualMethod, obj);
	if (Type(iterator) !== 'Object') {
		throw new $TypeError('iterator must return an object');
	}

	return iterator;
};
