'use strict';

<<<<<<< HEAD
var GetIntrinsic = require('get-intrinsic');

var $TypeError = GetIntrinsic('%TypeError%');
=======
var $TypeError = require('es-errors/type');
>>>>>>> daf1795927da2d71e7fda32ee847e5794b9052d5

var ToInt32 = require('../ToInt32');
var ToUint32 = require('../ToUint32');
var modulo = require('../modulo');
<<<<<<< HEAD
var Type = require('../Type');
=======
>>>>>>> daf1795927da2d71e7fda32ee847e5794b9052d5

// https://262.ecma-international.org/12.0/#sec-numeric-types-number-leftShift

module.exports = function NumberLeftShift(x, y) {
<<<<<<< HEAD
	if (Type(x) !== 'Number' || Type(y) !== 'Number') {
=======
	if (typeof x !== 'number' || typeof y !== 'number') {
>>>>>>> daf1795927da2d71e7fda32ee847e5794b9052d5
		throw new $TypeError('Assertion failed: `x` and `y` arguments must be Numbers');
	}

	var lnum = ToInt32(x);
	var rnum = ToUint32(y);

	var shiftCount = modulo(rnum, 32);

	return lnum << shiftCount;
};
