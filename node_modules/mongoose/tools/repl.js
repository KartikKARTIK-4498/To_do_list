'use strict';

run().catch(error => {
  console.error(error);
  process.exit(-1);
});

<<<<<<< HEAD
async function run () {
  const ReplSet = require('mongodb-topology-manager').ReplSet;

  // Create new instance
  const topology = new ReplSet('mongod', [{
    // mongod process options
    options: {
      bind_ip: 'localhost', port: 31000, dbpath: `/data/db/31000`
    }
  }, {
    // mongod process options
    options: {
      bind_ip: 'localhost', port: 31001, dbpath: `/data/db/31001`
    }
  }, {
    // Type of node
    arbiterOnly: true,
    // mongod process options
    options: {
      bind_ip: 'localhost', port: 31002, dbpath: `/data/db/31002`
    }
  }], {
    replSet: 'rs'
  });

  await topology.start();

  console.log('done');
=======
async function run() {
  const ReplSet = require('mongodb-memory-server').MongoMemoryReplSet;

  // Create new instance
  const replSet = new ReplSet({
    binary: {
      version: process.argv[2]
    },
    instanceOpts: [
      // Set the expiry job in MongoDB to run every second
      {
        port: 27017,
        args: ['--setParameter', 'ttlMonitorSleepSecs=1']
      }
    ],
    dbName: 'mongoose_test',
    replSet: {
      name: 'rs0',
      count: 2,
      storageEngine: 'wiredTiger'
    }
  });

  await replSet.start();
  await replSet.waitUntilRunning();
  console.log('MongoDB-ReplicaSet is now running.');
  console.log(replSet.getUri('mongoose_test'));
>>>>>>> daf1795927da2d71e7fda32ee847e5794b9052d5
}
